package ${bussiPackage}.${entityPackage}.controller;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.jeecg.common.api.vo.Result;
import org.jeecg.common.system.query.QueryGenerator;
import org.jeecg.common.aspect.annotation.AutoLog;
import org.jeecg.common.util.OConvertUtils;
import ${bussiPackage}.${entityPackage}.model.entity.${entityName}PO;
import ${bussiPackage}.${entityPackage}.model.dto.${entityName}DTO;
import ${bussiPackage}.${entityPackage}.service.${entityName}Service;
import java.util.Date;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.jeecg.common.system.base.controller.JeecgController;
import org.jeecgframework.poi.excel.ExcelImportUtil;
import org.jeecgframework.poi.excel.def.NormalExcelConstants;
import org.jeecgframework.poi.excel.entity.ExportParams;
import org.jeecgframework.poi.excel.entity.ImportParams;
import org.jeecgframework.poi.excel.view.JeecgEntityExcelView;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;
import com.alibaba.fastjson.JSON;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

/**
 * ${tableVo.ftlDescription}
 */
@Slf4j
@RequiredArgsConstructor
@Api(tags = "${tableVo.ftlDescription}")
@RestController
@RequestMapping("/${entityPackage}/${entityName?uncap_first}")
public class ${entityName}Controller {
    private final ${entityName}Service ${entityName?uncap_first}Service;

    /**
     * 分页列表查询${tableVo.ftlDescription}
     */
    @AutoLog(value = "${tableVo.ftlDescription}-分页列表查询")
    @ApiOperation(value = "${tableVo.ftlDescription}-分页列表查询", notes = "${tableVo.ftlDescription}-分页列表查询")
    @GetMapping("/list")
    public Result<?> queryPageList(${entityName}DTO ${entityName?uncap_first},
                                                @RequestParam(name = "pageNo", defaultValue = "1") Integer pageNo,
                                                @RequestParam(name = "pageSize", defaultValue = "10") Integer pageSize,
                                                HttpServletRequest req) {
        QueryWrapper<${entityName}PO> queryWrapper = QueryGenerator.initQueryWrapper(${entityName?uncap_first}, req.getParameterMap());
        Page<${entityName}PO> page = new Page<>(pageNo, pageSize);
        IPage<${entityName}PO> pageList = ${entityName?uncap_first}Service.page(page, queryWrapper);
        return Result.OK(pageList);
    }

    /**
     * 添加${tableVo.ftlDescription}
     */
    @AutoLog(value = "${tableVo.ftlDescription}-添加")
    @ApiOperation(value = "${tableVo.ftlDescription}-添加", notes = "${tableVo.ftlDescription}-添加")
    @PostMapping("/add")
    public Result<?> add(@RequestBody ${entityName}DTO ${entityName?uncap_first}) {
        ${entityName?uncap_first}Service.save(${entityName?uncap_first});
        return Result.OK("添加成功！");
    }

    /**
     * 编辑${tableVo.ftlDescription}
     */
    @AutoLog(value = "${tableVo.ftlDescription}-编辑")
    @ApiOperation(value = "${tableVo.ftlDescription}-编辑", notes = "${tableVo.ftlDescription}-编辑")
    @PutMapping("/edit")
    public Result<?> edit(@RequestBody ${entityName}DTO ${entityName?uncap_first}) {
        ${entityName?uncap_first}Service.updateById(${entityName?uncap_first});
        return Result.OK("编辑成功!");
    }

    /**
     * 通过id删除${tableVo.ftlDescription}
     */
    @AutoLog(value = "${tableVo.ftlDescription}-通过id删除")
    @ApiOperation(value = "${tableVo.ftlDescription}-通过id删除", notes = "${tableVo.ftlDescription}-通过id删除")
    @DeleteMapping("/delete")
    public Result<?> delete(@RequestParam(name = "id", required = true) String id) {
        ${entityName?uncap_first}Service.removeById(id);
        return Result.OK("删除成功!");
    }

    /**
     * 批量删除${tableVo.ftlDescription}
     */
    @AutoLog(value = "${tableVo.ftlDescription}-批量删除")
    @ApiOperation(value = "${tableVo.ftlDescription}-批量删除", notes = "${tableVo.ftlDescription}-批量删除")
    @DeleteMapping("/deleteBatch")
    public Result<?> deleteBatch(@RequestParam(name = "ids", required = true) List<String> ids) {
        ${entityName?uncap_first}Service.removeByIds(ids);
        return Result.OK("批量删除成功！");
    }

    /**
     * 通过id查询${tableVo.ftlDescription}
     */
    @AutoLog(value = "${tableVo.ftlDescription}-通过id查询")
    @ApiOperation(value = "${tableVo.ftlDescription}-通过id查询", notes = "${tableVo.ftlDescription}-通过id查询")
    @GetMapping("/queryById")
    public Result<?> queryById(@RequestParam(name = "id", required = true) String id) {
        ${entityName}PO ${entityName?uncap_first} = ${entityName?uncap_first}Service.getById(id);
        return Result.OK(${entityName?uncap_first});
    }

    /**
     * 导出excel
     */
    @GetMapping("/exportXls")
    public ModelAndView exportXls(HttpServletRequest request, ${entityName} ${entityName?uncap_first}) {
        return super.exportXls(request, ${entityName?uncap_first}, ${entityName}. class,"${tableVo.ftlDescription}");
    }

    /**
     * 通过excel导入数据
     */
    @PostMapping("/importExcel")
    public Result<?> importExcel(HttpServletRequest request, HttpServletResponse response) {
        return super.importExcel(request, response, ${entityName}. class);
    }

}
